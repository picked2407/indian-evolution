{"ast":null,"code":"var _jsxFileName = \"/home/aiprofits651/arino-react (4)/src/components/Pages/CaseStudyDetailsPage.jsx\",\n  _s = $RefreshSig$();\n// Filename - App.js\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState(\"00:00:00\");\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to\n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : \"0\" + hours) + \":\" + (minutes > 9 ? minutes : \"0\" + minutes) + \":\" + (seconds > 9 ? seconds : \"0\" + seconds));\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next\n    setTimer(\"00:00:10\");\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if\n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"GeeksforGeeks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Countdown Timer Using React JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"38z5z2E9on0hBZZjKpzRYdf37QM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset","style","textAlign","margin","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/aiprofits651/arino-react (4)/src/components/Pages/CaseStudyDetailsPage.jsx"],"sourcesContent":["// Filename - App.js\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst App = () => {\n\t// We need ref in this, because we are dealing\n\t// with JS setInterval to keep track of it and\n\t// stop it when needed\n\tconst Ref = useRef(null);\n\n\t// The state for our timer\n\tconst [timer, setTimer] = useState(\"00:00:00\");\n\n\tconst getTimeRemaining = (e) => {\n\t\tconst total =\n\t\t\tDate.parse(e) - Date.parse(new Date());\n\t\tconst seconds = Math.floor((total / 1000) % 60);\n\t\tconst minutes = Math.floor(\n\t\t\t(total / 1000 / 60) % 60\n\t\t);\n\t\tconst hours = Math.floor(\n\t\t\t(total / 1000 / 60 / 60) % 24\n\t\t);\n\t\treturn {\n\t\t\ttotal,\n\t\t\thours,\n\t\t\tminutes,\n\t\t\tseconds,\n\t\t};\n\t};\n\n\tconst startTimer = (e) => {\n\t\tlet { total, hours, minutes, seconds } =\n\t\t\tgetTimeRemaining(e);\n\t\tif (total >= 0) {\n\t\t\t// update the timer\n\t\t\t// check if less than 10 then we need to\n\t\t\t// add '0' at the beginning of the variable\n\t\t\tsetTimer(\n\t\t\t\t(hours > 9 ? hours : \"0\" + hours) +\n\t\t\t\t\":\" +\n\t\t\t\t(minutes > 9\n\t\t\t\t\t? minutes\n\t\t\t\t\t: \"0\" + minutes) +\n\t\t\t\t\":\" +\n\t\t\t\t(seconds > 9 ? seconds : \"0\" + seconds)\n\t\t\t);\n\t\t}\n\t};\n\n\tconst clearTimer = (e) => {\n\t\t// If you adjust it you should also need to\n\t\t// adjust the Endtime formula we are about\n\t\t// to code next\n\t\tsetTimer(\"00:00:10\");\n\n\t\t// If you try to remove this line the\n\t\t// updating of timer Variable will be\n\t\t// after 1000ms or 1sec\n\t\tif (Ref.current) clearInterval(Ref.current);\n\t\tconst id = setInterval(() => {\n\t\t\tstartTimer(e);\n\t\t}, 1000);\n\t\tRef.current = id;\n\t};\n\n\tconst getDeadTime = () => {\n\t\tlet deadline = new Date();\n\n\t\t// This is where you need to adjust if\n\t\t// you entend to add more time\n\t\tdeadline.setSeconds(deadline.getSeconds() + 10);\n\t\treturn deadline;\n\t};\n\n\t// We can use useEffect so that when the component\n\t// mount the timer will start as soon as possible\n\n\t// We put empty array to act as componentDid\n\t// mount only\n\tuseEffect(() => {\n\t\tclearTimer(getDeadTime());\n\t}, []);\n\n\t// Another way to call the clearTimer() to start\n\t// the countdown is via action event from the\n\t// button first we create function to be called\n\t// by the button\n\tconst onClickReset = () => {\n\t\tclearTimer(getDeadTime());\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{ textAlign: \"center\", margin: \"auto\" }}>\n\t\t\t<h1 style={{ color: \"green\" }}>\n\t\t\t\tGeeksforGeeks\n\t\t\t</h1>\n\t\t\t<h3>Countdown Timer Using React JS</h3>\n\t\t\t<h2>{timer}</h2>\n\t\t\t<button onClick={onClickReset}>Reset</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}